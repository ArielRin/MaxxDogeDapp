{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var initialData={account:\"\",balance:0,network:\"\"};export var blockchainSlice=createSlice({name:\"blockchain\",initialState:{value:initialData},reducers:{updateAccountData:function updateAccountData(state,action){state.value=action.payload;},disconnect:function disconnect(state){state.value=initialData;}}});export default blockchainSlice.reducer;var _blockchainSlice$acti=blockchainSlice.actions,updateAccountData=_blockchainSlice$acti.updateAccountData,disconnect=_blockchainSlice$acti.disconnect;export{updateAccountData,disconnect};","map":{"version":3,"names":["createSlice","initialData","account","balance","network","blockchainSlice","name","initialState","value","reducers","updateAccountData","state","action","payload","disconnect","reducer","actions"],"sources":["C:/projects/MaxxDogeDapp/src/features/blockchain.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialData = { account: \"\", balance: 0, network: \"\" }\r\nexport const blockchainSlice = createSlice({\r\n    name: \"blockchain\",\r\n    initialState: { value: initialData },\r\n    reducers: {\r\n        updateAccountData: (state, action) => {\r\n            state.value = action.payload\r\n        },\r\n        disconnect: (state) => {\r\n            state.value = initialData\r\n        }\r\n    },\r\n}\r\n)\r\n\r\nexport default blockchainSlice.reducer;\r\n\r\nexport const { updateAccountData, disconnect } = blockchainSlice.actions;\r\n"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,YAAW,CAAG,CAAEC,OAAO,CAAE,EAAX,CAAeC,OAAO,CAAE,CAAxB,CAA2BC,OAAO,CAAE,EAApC,CAApB,CACA,MAAO,IAAMC,gBAAe,CAAGL,WAAW,CAAC,CACvCM,IAAI,CAAE,YADiC,CAEvCC,YAAY,CAAE,CAAEC,KAAK,CAAEP,WAAT,CAFyB,CAGvCQ,QAAQ,CAAE,CACNC,iBAAiB,CAAE,2BAACC,KAAD,CAAQC,MAAR,CAAmB,CAClCD,KAAK,CAACH,KAAN,CAAcI,MAAM,CAACC,OAArB,CACH,CAHK,CAINC,UAAU,CAAE,oBAACH,KAAD,CAAW,CACnBA,KAAK,CAACH,KAAN,CAAcP,WAAd,CACH,CANK,CAH6B,CAAD,CAAnC,CAcP,cAAeI,gBAAe,CAACU,OAA/B,CAEO,0BAA0CV,eAAe,CAACW,OAA1D,CAAQN,iBAAR,uBAAQA,iBAAR,CAA2BI,UAA3B,uBAA2BA,UAA3B,C"},"metadata":{},"sourceType":"module"}