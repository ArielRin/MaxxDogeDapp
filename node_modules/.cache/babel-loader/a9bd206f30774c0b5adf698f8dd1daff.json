{"ast":null,"code":"import _regeneratorRuntime from\"C:/projects/MaxxDogeDapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/projects/MaxxDogeDapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/projects/MaxxDogeDapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import\"../assets/styles.css\";import image1 from\"../assets/img/mint-punk.png\";import NavBar from'../components/NavBar';import Footer from'../components/Footer';import{useSelector}from\"react-redux\";import{ethers}from\"ethers\";import axios from\"axios\";import{Table}from\"react-bootstrap\";import{CircularProgress}from\"@mui/material\";import stakingContract from\"../artifacts/NFTStakingVault.sol/NFTStakingVault.json\";import nftContract from\"../artifacts/KryptoPunks.sol/KryptoPunks.json\";import{stakingContractAddress,nftContractAddress,ownerAddress,networkDeployedTo}from\"../utils/contracts-config\";import networksMap from\"../utils/networksMap.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function MintPage(){var data=useSelector(function(state){return state.blockchain.value;});var _useState=useState(1),_useState2=_slicedToArray(_useState,2),mintAmount=_useState2[0],setMintAmount=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),userNfts=_useState4[0],setUserNfts=_useState4[1];var _useState5=useState({currentSupply:0,maxSupply:99,maxMintAmountPerTx:20,mintCost:550,paused:1,userNftIds:[],stakedNftIds:[],totalReward:0}),_useState6=_slicedToArray(_useState5,2),info=_useState6[0],setInfo=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];var getInfo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var provider,nft_contract,staking_contract,signer,user,stakedTokens,reward,paused,userTokens,maxMintAmountPerTx,cost,baseURI,baseExtension,totalSupply,maxSupply,_userNfts;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(data.network===networksMap[networkDeployedTo])){_context2.next=50;break;}provider=new ethers.providers.Web3Provider(window.ethereum,\"any\");nft_contract=new ethers.Contract(nftContractAddress,nftContract.abi,provider);staking_contract=new ethers.Contract(stakingContractAddress,stakingContract.abi,provider);signer=provider.getSigner();_context2.next=7;return signer.getAddress();case 7:user=_context2.sent;_context2.t0=Array;_context2.next=11;return staking_contract.tokensOfOwner(user);case 11:_context2.t1=_context2.sent;_context2.t2=function(x){return Number(x);};stakedTokens=_context2.t0.from.call(_context2.t0,_context2.t1,_context2.t2);_context2.next=16;return staking_contract.getTotalRewardEarned(user);case 16:reward=_context2.sent;_context2.next=19;return nft_contract.paused();case 19:paused=_context2.sent;_context2.t3=Array;_context2.next=23;return nft_contract.tokensOfOwner(user);case 23:_context2.t4=_context2.sent;_context2.t5=function(x){return Number(x);};userTokens=_context2.t3.from.call(_context2.t3,_context2.t4,_context2.t5);_context2.next=28;return nft_contract.maxMintAmountPerTx();case 28:maxMintAmountPerTx=_context2.sent;_context2.next=31;return nft_contract.cost();case 31:cost=_context2.sent;_context2.next=34;return nft_contract.baseURI();case 34:baseURI=_context2.sent;_context2.next=37;return nft_contract.baseExtension();case 37:baseExtension=_context2.sent;_context2.next=40;return nft_contract.totalSupply();case 40:totalSupply=_context2.sent;_context2.next=43;return nft_contract.maxSupply();case 43:maxSupply=_context2.sent;userTokens=userTokens.concat(stakedTokens).sort();setInfo({currentSupply:Number(totalSupply),maxSupply:Number(maxSupply),maxMintAmountPerTx:Number(maxMintAmountPerTx),mintCost:Number(ethers.utils.formatUnits(cost,\"WPWR\")),paused:Number(paused),userNftIds:userTokens,stakedNftIds:stakedTokens,totalReward:Number(ethers.utils.formatUnits(reward,\"WPWR\"))});_context2.next=48;return Promise.all(userTokens.map(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(nft){var metadata;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(baseURI.replace(\"ipfs://\",\"https://ipfs.io/ipfs/\")+\"/\"+nft.toString()+baseExtension);case 2:metadata=_context.sent;return _context.abrupt(\"return\",{id:nft,uri:metadata.data.image.replace(\"ipfs://\",\"https://ipfs.io/ipfs/\")});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}()));case 48:_userNfts=_context2.sent;setUserNfts(_userNfts);case 50:case\"end\":return _context2.stop();}}},_callee2);}));return function getInfo(){return _ref.apply(this,arguments);};}();var mint=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var provider,signer,nft_contract,mint_tx,totalMintCost,_mint_tx;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(data.network===networksMap[networkDeployedTo]&&info.paused==2)){_context3.next=29;break;}_context3.prev=1;setLoading(true);provider=new ethers.providers.Web3Provider(window.ethereum,\"any\");signer=provider.getSigner();nft_contract=new ethers.Contract(nftContractAddress,nftContract.abi,signer);if(!(data.account===ownerAddress)){_context3.next=14;break;}_context3.next=9;return nft_contract.mint(mintAmount);case 9:mint_tx=_context3.sent;_context3.next=12;return mint_tx.wait();case 12:_context3.next=20;break;case 14:totalMintCost=ethers.utils.parseEther(String(info.mintCost*mintAmount),\"WPWR\");_context3.next=17;return nft_contract.mint(mintAmount,{value:totalMintCost});case 17:_mint_tx=_context3.sent;_context3.next=20;return _mint_tx.wait();case 20:setLoading(false);getInfo();_context3.next=29;break;case 24:_context3.prev=24;_context3.t0=_context3[\"catch\"](1);setLoading(false);window.alert(\"An error has occured, Please Try Again\");console.log(_context3.t0);case 29:case\"end\":return _context3.stop();}}},_callee3,null,[[1,24]]);}));return function mint(){return _ref3.apply(this,arguments);};}();var stakeItem=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id){var provider,signer,nft_contract,staking_contract,approve_tx,stake_tx;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log([id]);if(!(data.network===networksMap[networkDeployedTo])){_context4.next=29;break;}console.log([id]);_context4.prev=3;setLoading(true);provider=new ethers.providers.Web3Provider(window.ethereum,\"any\");signer=provider.getSigner();nft_contract=new ethers.Contract(nftContractAddress,nftContract.abi,signer);staking_contract=new ethers.Contract(stakingContractAddress,stakingContract.abi,signer);_context4.next=11;return nft_contract.approve(stakingContractAddress,id);case 11:approve_tx=_context4.sent;_context4.next=14;return approve_tx.wait();case 14:console.log([id]);_context4.next=17;return staking_contract.stake([id]);case 17:stake_tx=_context4.sent;_context4.next=20;return stake_tx.wait();case 20:setLoading(false);getInfo();_context4.next=29;break;case 24:_context4.prev=24;_context4.t0=_context4[\"catch\"](3);setLoading(false);window.alert(\"An error has occured, Please Try Again\");console.log(_context4.t0);case 29:case\"end\":return _context4.stop();}}},_callee4,null,[[3,24]]);}));return function stakeItem(_x2){return _ref4.apply(this,arguments);};}();var unstakeItem=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(id){var provider,signer,staking_contract,unstake_tx;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!(data.network===networksMap[networkDeployedTo])){_context5.next=20;break;}_context5.prev=1;setLoading(true);provider=new ethers.providers.Web3Provider(window.ethereum,\"any\");signer=provider.getSigner();staking_contract=new ethers.Contract(stakingContractAddress,stakingContract.abi,signer);_context5.next=8;return staking_contract.unstake([id]);case 8:unstake_tx=_context5.sent;_context5.next=11;return unstake_tx.wait();case 11:setLoading(false);getInfo();_context5.next=20;break;case 15:_context5.prev=15;_context5.t0=_context5[\"catch\"](1);setLoading(false);window.alert(\"An error has occured, Please Try Again\");console.log(_context5.t0);case 20:case\"end\":return _context5.stop();}}},_callee5,null,[[1,15]]);}));return function unstakeItem(_x3){return _ref5.apply(this,arguments);};}();var unstakeAll=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){var provider,signer,staking_contract,unstake_tx;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(data.network===networksMap[networkDeployedTo])){_context6.next=20;break;}_context6.prev=1;setLoading(true);provider=new ethers.providers.Web3Provider(window.ethereum,\"any\");signer=provider.getSigner();staking_contract=new ethers.Contract(stakingContractAddress,stakingContract.abi,signer);_context6.next=8;return staking_contract.unstake(info.stakedNftIds);case 8:unstake_tx=_context6.sent;_context6.next=11;return unstake_tx.wait();case 11:setLoading(false);getInfo();_context6.next=20;break;case 15:_context6.prev=15;_context6.t0=_context6[\"catch\"](1);setLoading(false);window.alert(\"An error has occured, Please Try Again\");console.log(_context6.t0);case 20:case\"end\":return _context6.stop();}}},_callee6,null,[[1,15]]);}));return function unstakeAll(){return _ref6.apply(this,arguments);};}();var claim=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(){var provider,signer,staking_contract,claim_tx;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!(data.network===networksMap[networkDeployedTo])){_context7.next=20;break;}_context7.prev=1;setLoading(true);provider=new ethers.providers.Web3Provider(window.ethereum,\"any\");signer=provider.getSigner();staking_contract=new ethers.Contract(stakingContractAddress,stakingContract.abi,signer);_context7.next=8;return staking_contract.claim(info.stakedNftIds);case 8:claim_tx=_context7.sent;_context7.next=11;return claim_tx.wait();case 11:setLoading(false);getInfo();_context7.next=20;break;case 15:_context7.prev=15;_context7.t0=_context7[\"catch\"](1);setLoading(false);window.alert(\"An error has occured, Please Try Again\");console.log(_context7.t0);case 20:case\"end\":return _context7.stop();}}},_callee7,null,[[1,15]]);}));return function claim(){return _ref7.apply(this,arguments);};}();useEffect(function(){getInfo();},[data.account]);return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"section\",{className:\"claim\",id:\"claim\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"roadmap-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-container\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-center p-2\",children:\"Minting Info\"}),/*#__PURE__*/_jsx(Table,{responsive:true,children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:\"Total Collection Supply\"}),/*#__PURE__*/_jsx(\"td\",{children:info.maxSupply})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:\"Minted NFT Count\"}),/*#__PURE__*/_jsx(\"td\",{children:info.currentSupply})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:\"Mint Cost\"}),/*#__PURE__*/_jsxs(\"td\",{children:[info.mintCost,\" WPWR\"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:\"Max Mint Amount Per TX \"}),/*#__PURE__*/_jsxs(\"td\",{children:[info.maxMintAmountPerTx,\" \"]})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-container\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-center p-2\",children:\"Staking Info\"}),/*#__PURE__*/_jsx(Table,{responsive:true,children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:\"Your MaxDogeNFTs \"}),/*#__PURE__*/_jsxs(\"td\",{children:[\"[\",info.userNftIds.join(\" \"),\"]\"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:\"Items Count\"}),/*#__PURE__*/_jsx(\"td\",{children:info.userNftIds.length})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:\"Items Staked\"}),/*#__PURE__*/_jsxs(\"td\",{children:[\"[\",info.stakedNftIds.join(\" \"),\"]\"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:\"Earned Reward\"}),/*#__PURE__*/_jsx(\"td\",{children:info.totalReward!==0?parseFloat(info.totalReward).toFixed(6):0})]})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info m-3\",src:\"\",onClick:claim,children:loading?/*#__PURE__*/_jsx(CircularProgress,{color:\"inherit\",size:18}):\"Claim\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info m-3\",src:\"\",onClick:unstakeAll,children:loading?/*#__PURE__*/_jsx(CircularProgress,{color:\"inherit\",size:18}):\"Unstake All\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"roadmap-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mint-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",style:{justifyContent:\"center\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-7\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"minttitle title\",children:\"Mint Your MaxDogeNFTs\"}),/*#__PURE__*/_jsx(\"img\",{src:image1,className:\"mint-img\",alt:\"\"}),/*#__PURE__*/_jsx(\"p\",{className:\"lead\",style:{marginBottom:\"30px\"},children:\"A MaxDogeNFT is a character that is On Maxx Chain and Ready to gooooo! Maximum 5 per Transaction. Only 1200 WPWR\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-center\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"minus btn btn-info rounded-circle\",disabled:mintAmount===1,onClick:function onClick(){setMintAmount(mintAmount-1);},children:\"-\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"mintnum text-center\",readOnly:true,value:mintAmount}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"plus btn btn-info rounded-circle\",disabled:mintAmount===info.maxMintAmountPerTx,onClick:function onClick(){setMintAmount(mintAmount+1);},children:\"+\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info mt-3\",onClick:mint,children:loading?/*#__PURE__*/_jsx(CircularProgress,{color:\"inherit\",size:18}):\"MINT\"})})]})]})})})})})]}),/*#__PURE__*/_jsx(\"section\",{className:\"my-items\",children:userNfts.length!==0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"minttitle title text-center\",children:\"My MaxDogeNFTs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"items container\",children:userNfts.map(function(nft,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"item-box\",children:[/*#__PURE__*/_jsx(\"img\",{src:nft.uri,className:\"item-img\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:info.stakedNftIds.includes(nft.id)?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info m-3\",role:\"button\",onClick:function onClick(){unstakeItem(nft.id);},children:loading?/*#__PURE__*/_jsx(CircularProgress,{color:\"inherit\",size:18}):\"UNSTAKE\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info m-3\",role:\"button\",onClick:function onClick(){stakeItem(nft.id);},children:loading?/*#__PURE__*/_jsx(CircularProgress,{color:\"inherit\",size:18}):\"STAKE\"})})]},index);})})]}):null}),/*#__PURE__*/_jsx(Footer,{})]});}export default MintPage;","map":{"version":3,"names":["React","useState","useEffect","image1","NavBar","Footer","useSelector","ethers","axios","Table","CircularProgress","stakingContract","nftContract","stakingContractAddress","nftContractAddress","ownerAddress","networkDeployedTo","networksMap","MintPage","data","state","blockchain","value","mintAmount","setMintAmount","userNfts","setUserNfts","currentSupply","maxSupply","maxMintAmountPerTx","mintCost","paused","userNftIds","stakedNftIds","totalReward","info","setInfo","loading","setLoading","getInfo","network","provider","providers","Web3Provider","window","ethereum","nft_contract","Contract","abi","staking_contract","signer","getSigner","getAddress","user","Array","tokensOfOwner","x","Number","stakedTokens","from","getTotalRewardEarned","reward","userTokens","cost","baseURI","baseExtension","totalSupply","concat","sort","utils","formatUnits","Promise","all","map","nft","get","replace","toString","metadata","id","uri","image","_userNfts","mint","account","mint_tx","wait","totalMintCost","parseEther","String","alert","console","log","stakeItem","approve","approve_tx","stake","stake_tx","unstakeItem","unstake","unstake_tx","unstakeAll","claim","claim_tx","join","length","parseFloat","toFixed","textAlign","justifyContent","marginBottom","index","includes"],"sources":["C:/projects/MaxxDogeDapp/src/pages/MintPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"../assets/styles.css\";\r\nimport image1 from \"../assets/img/mint-punk.png\";\r\nimport NavBar from '../components/NavBar';\r\nimport Footer from '../components/Footer';\r\nimport { useSelector } from \"react-redux\";\r\nimport { ethers } from \"ethers\";\r\nimport axios from \"axios\"\r\nimport { Table } from \"react-bootstrap\";\r\nimport { CircularProgress } from \"@mui/material\"\r\n\r\nimport stakingContract from \"../artifacts/NFTStakingVault.sol/NFTStakingVault.json\";\r\nimport nftContract from \"../artifacts/KryptoPunks.sol/KryptoPunks.json\";\r\nimport { stakingContractAddress, nftContractAddress, ownerAddress, networkDeployedTo } from \"../utils/contracts-config\";\r\nimport networksMap from \"../utils/networksMap.json\";\r\n\r\nfunction MintPage() {\r\n    const data = useSelector((state) => state.blockchain.value)\r\n\r\n    const [mintAmount, setMintAmount] = useState(1)\r\n    const [userNfts, setUserNfts] = useState([])\r\n    const [info, setInfo] = useState({\r\n        currentSupply: 0,\r\n        maxSupply: 99,\r\n        maxMintAmountPerTx: 20,\r\n        mintCost: 550,\r\n        paused: 1,\r\n        userNftIds: [],\r\n        stakedNftIds: [],\r\n        totalReward: 0\r\n    })\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const getInfo = async () => {\r\n        if (data.network === networksMap[networkDeployedTo]) {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n            const nft_contract = new ethers.Contract(nftContractAddress, nftContract.abi, provider);\r\n            const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, provider);\r\n\r\n            const signer = provider.getSigner()\r\n            const user = await signer.getAddress()\r\n\r\n            const stakedTokens = Array.from((await staking_contract.tokensOfOwner(user)), x => Number(x))\r\n            const reward = await staking_contract.getTotalRewardEarned(user)\r\n\r\n            const paused = await nft_contract.paused()\r\n            var userTokens = Array.from((await nft_contract.tokensOfOwner(user)), x => Number(x))\r\n            const maxMintAmountPerTx = await nft_contract.maxMintAmountPerTx()\r\n            const cost = await nft_contract.cost()\r\n            const baseURI = await nft_contract.baseURI()\r\n            const baseExtension = await nft_contract.baseExtension()\r\n            const totalSupply = await nft_contract.totalSupply()\r\n            const maxSupply = await nft_contract.maxSupply()\r\n\r\n            userTokens = userTokens.concat(stakedTokens).sort()\r\n\r\n            setInfo({\r\n                currentSupply: Number(totalSupply),\r\n                maxSupply: Number(maxSupply),\r\n                maxMintAmountPerTx: Number(maxMintAmountPerTx),\r\n                mintCost: Number(ethers.utils.formatUnits(cost, \"WPWR\")),\r\n                paused: Number(paused),\r\n                userNftIds: userTokens,\r\n                stakedNftIds: stakedTokens,\r\n                totalReward: Number(ethers.utils.formatUnits(reward, \"WPWR\"))\r\n            })\r\n\r\n            const _userNfts = await Promise.all(userTokens.map(async (nft) => {\r\n                const metadata = await axios.get(\r\n                    baseURI.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\") + \"/\" + nft.toString() + baseExtension\r\n                )\r\n                return {\r\n                    id: nft,\r\n                    uri: metadata.data.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")\r\n                }\r\n            }))\r\n\r\n            setUserNfts(_userNfts)\r\n        }\r\n    }\r\n\r\n    const mint = async () => {\r\n        if (data.network === networksMap[networkDeployedTo] && info.paused == 2) {\r\n            try {\r\n                setLoading(true)\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n                const signer = provider.getSigner()\r\n                const nft_contract = new ethers.Contract(nftContractAddress, nftContract.abi, signer);\r\n                if (data.account === ownerAddress) {\r\n                    const mint_tx = await nft_contract.mint(mintAmount)\r\n                    await mint_tx.wait()\r\n                } else {\r\n                    const totalMintCost = ethers.utils.parseEther(String(info.mintCost * mintAmount), \"WPWR\")\r\n                    const mint_tx = await nft_contract.mint(mintAmount, { value: totalMintCost })\r\n                    await mint_tx.wait()\r\n                }\r\n                setLoading(false)\r\n                getInfo()\r\n            } catch (error) {\r\n                setLoading(false)\r\n                window.alert(\"An error has occured, Please Try Again\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const stakeItem = async (id) => {\r\n        console.log([id])\r\n        if (data.network === networksMap[networkDeployedTo]) {\r\n            console.log([id])\r\n            try {\r\n                setLoading(true)\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n                const signer = provider.getSigner()\r\n                const nft_contract = new ethers.Contract(nftContractAddress, nftContract.abi, signer);\r\n                const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\r\n\r\n                const approve_tx = await nft_contract.approve(stakingContractAddress, id)\r\n                await approve_tx.wait()\r\n\r\n                console.log([id])\r\n                const stake_tx = await staking_contract.stake([id])\r\n                await stake_tx.wait()\r\n\r\n                setLoading(false)\r\n                getInfo()\r\n            } catch (error) {\r\n                setLoading(false)\r\n                window.alert(\"An error has occured, Please Try Again\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const unstakeItem = async (id) => {\r\n        if (data.network === networksMap[networkDeployedTo]) {\r\n            try {\r\n                setLoading(true)\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n                const signer = provider.getSigner()\r\n                const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\r\n\r\n                const unstake_tx = await staking_contract.unstake([id])\r\n                await unstake_tx.wait()\r\n\r\n                setLoading(false)\r\n                getInfo()\r\n            } catch (error) {\r\n                setLoading(false)\r\n                window.alert(\"An error has occured, Please Try Again\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const unstakeAll = async () => {\r\n        if (data.network === networksMap[networkDeployedTo]) {\r\n            try {\r\n                setLoading(true)\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n                const signer = provider.getSigner()\r\n                const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\r\n\r\n                const unstake_tx = await staking_contract.unstake(info.stakedNftIds)\r\n                await unstake_tx.wait()\r\n\r\n                setLoading(false)\r\n                getInfo()\r\n            } catch (error) {\r\n                setLoading(false)\r\n                window.alert(\"An error has occured, Please Try Again\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const claim = async () => {\r\n        if (data.network === networksMap[networkDeployedTo]) {\r\n            try {\r\n                setLoading(true)\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n                const signer = provider.getSigner()\r\n                const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\r\n\r\n                const claim_tx = await staking_contract.claim(info.stakedNftIds)\r\n                await claim_tx.wait()\r\n\r\n                setLoading(false)\r\n                getInfo()\r\n            } catch (error) {\r\n                setLoading(false)\r\n                window.alert(\"An error has occured, Please Try Again\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo()\r\n    }, [data.account])\r\n\r\n    return (\r\n        <section>\r\n            <NavBar />\r\n            <br />\r\n            <section className=\"claim\" id=\"claim\">\r\n                <div className=\"roadmap-container\"  >\r\n                    <div className='info-container'>\r\n                        <h3 className='text-center p-2'>Minting Info</h3>\r\n                        <Table responsive>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className='p-2'>Total Collection Supply</td>\r\n                                    <td>{info.maxSupply}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Minted NFT Count</td>\r\n                                    <td>{info.currentSupply}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Mint Cost</td>\r\n                                    <td>{info.mintCost} WPWR</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Max Mint Amount Per TX </td>\r\n                                    <td>{info.maxMintAmountPerTx} </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table >\r\n                    </div>\r\n                    <div className='info-container'>\r\n                        <h3 className='text-center p-2'>Staking Info</h3>\r\n                        <Table responsive>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className='p-2'>Your MaxDogeNFTs </td>\r\n                                    <td>[{info.userNftIds.join(\" \")}]</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Items Count</td>\r\n                                    <td>{info.userNftIds.length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Items Staked</td>\r\n                                    <td>[{info.stakedNftIds.join(\" \")}]</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Earned Reward</td>\r\n                                    <td>\r\n                                        {info.totalReward !== 0 ?\r\n                                            parseFloat(info.totalReward).toFixed(6) : 0\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table >\r\n                        <div style={{ textAlign: \"center\" }} >\r\n                            <button className=\"btn btn-info m-3\" src=\"\" onClick={claim}>\r\n                                {loading ? <CircularProgress color=\"inherit\" size={18} /> : \"Claim\"}\r\n                            </button>\r\n                            <button className=\"btn btn-info m-3\" src=\"\" onClick={unstakeAll}>\r\n                                {loading ? <CircularProgress color=\"inherit\" size={18} /> : \"Unstake All\"}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"roadmap-container\" >\r\n                    <div className='mint-container'>\r\n                        <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n                            <div className=\"col-md-7\">\r\n                                <div className=\"text-center\">\r\n                                    <h2 className=\"minttitle title\">\r\n                                        Mint Your MaxDogeNFTs\r\n                                    </h2>\r\n                                    <img src={image1} className=\"mint-img\" alt=\"\" />\r\n                                    <p className=\"lead\" style={{ marginBottom: \"30px\" }}>A MaxDogeNFT is a character that is On Maxx Chain and Ready to gooooo! Maximum 5 per Transaction. Only 1200 WPWR</p>\r\n                                    <div className=\"form-group\" >\r\n                                        <div className=\"d-flex justify-content-center\">\r\n                                            <button type=\"button\"\r\n                                                className=\"minus btn btn-info rounded-circle\"\r\n                                                disabled={mintAmount === 1}\r\n                                                onClick={() => { setMintAmount(mintAmount - 1) }}>-</button>\r\n                                            <input type=\"number\" className=\"mintnum text-center\" readOnly value={mintAmount} />\r\n                                            <button type=\"button\"\r\n                                                className=\"plus btn btn-info rounded-circle\"\r\n                                                disabled={mintAmount === info.maxMintAmountPerTx}\r\n                                                onClick={() => { setMintAmount(mintAmount + 1) }}>+</button>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button className=\"btn btn-info mt-3\" onClick={mint}>\r\n                                                {loading ? <CircularProgress color=\"inherit\" size={18} /> : \"MINT\"}\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className='my-items'>\r\n                {userNfts.length !== 0 ? (\r\n                    <>\r\n                        <h2 className=\"minttitle title text-center\">My MaxDogeNFTs</h2>\r\n                        <div className='items container'>\r\n                            {userNfts.map((nft, index) => {\r\n                                return (\r\n                                    <div className='item-box' key={index}>\r\n                                        <img src={nft.uri} className=\"item-img\" />\r\n                                        <div className='text-center'>\r\n                                            {info.stakedNftIds.includes(nft.id) ? (\r\n                                                <button className=\"btn btn-info m-3\" role=\"button\" onClick={() => { unstakeItem(nft.id) }}>\r\n                                                    {loading ? <CircularProgress color=\"inherit\" size={18} /> : \"UNSTAKE\"}\r\n                                                </button>\r\n                                            ) : (\r\n                                                <button className=\"btn btn-info m-3\" role=\"button\"\r\n                                                    onClick={() => { stakeItem(nft.id) }}>\r\n                                                    {loading ? <CircularProgress color=\"inherit\" size={18} /> : \"STAKE\"}\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </>\r\n                ) : null}\r\n            </section>\r\n            <Footer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MintPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}