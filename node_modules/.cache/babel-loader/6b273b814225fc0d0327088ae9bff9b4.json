{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\MaxxDogeDapp\\\\src\\\\pages\\\\MintPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"../assets/styles.css\";\nimport image1 from \"../assets/img/mint-punk.png\";\nimport NavBar from '../components/NavBar';\nimport Footer from '../components/Footer';\nimport { useSelector } from \"react-redux\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\nimport { Table } from \"react-bootstrap\";\nimport { CircularProgress } from \"@mui/material\";\nimport stakingContract from \"../artifacts/NFTStakingVault.sol/NFTStakingVault.json\";\nimport nftContract from \"../artifacts/KryptoPunks.sol/KryptoPunks.json\";\nimport { stakingContractAddress, nftContractAddress, ownerAddress, networkDeployedTo } from \"../utils/contracts-config\";\nimport networksMap from \"../utils/networksMap.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MintPage() {\n  _s();\n\n  const data = useSelector(state => state.blockchain.value);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [userNfts, setUserNfts] = useState([]);\n  const [info, setInfo] = useState({\n    currentSupply: 0,\n    maxSupply: 99,\n    maxMintAmountPerTx: 20,\n    mintCost: 550,\n    paused: 1,\n    userNftIds: [],\n    stakedNftIds: [],\n    totalReward: 0\n  });\n  const [loading, setLoading] = useState(false);\n\n  const getInfo = async () => {\n    if (data.network === networksMap[networkDeployedTo]) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      const nft_contract = new ethers.Contract(nftContractAddress, nftContract.abi, provider);\n      const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, provider);\n      const signer = provider.getSigner();\n      const user = await signer.getAddress();\n      const stakedTokens = Array.from(await staking_contract.tokensOfOwner(user), x => Number(x));\n      const reward = await staking_contract.getTotalRewardEarned(user);\n      const paused = await nft_contract.paused();\n      var userTokens = Array.from(await nft_contract.tokensOfOwner(user), x => Number(x));\n      const maxMintAmountPerTx = await nft_contract.maxMintAmountPerTx();\n      const cost = await nft_contract.cost();\n      const baseURI = await nft_contract.baseURI();\n      const baseExtension = await nft_contract.baseExtension();\n      const totalSupply = await nft_contract.totalSupply();\n      const maxSupply = await nft_contract.maxSupply();\n      userTokens = userTokens.concat(stakedTokens).sort();\n      setInfo({\n        currentSupply: Number(totalSupply),\n        maxSupply: Number(maxSupply),\n        maxMintAmountPerTx: Number(maxMintAmountPerTx),\n        mintCost: Number(ethers.utils.formatUnits(cost, \"WPWR\")),\n        paused: Number(paused),\n        userNftIds: userTokens,\n        stakedNftIds: stakedTokens,\n        totalReward: Number(ethers.utils.formatUnits(reward, \"WPWR\"))\n      });\n\n      const _userNfts = await Promise.all(userTokens.map(async nft => {\n        const metadata = await axios.get(baseURI.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\") + \"/\" + nft.toString() + baseExtension);\n        return {\n          id: nft,\n          uri: metadata.data.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")\n        };\n      }));\n\n      setUserNfts(_userNfts);\n    }\n  };\n\n  const mint = async () => {\n    if (data.network === networksMap[networkDeployedTo] && info.paused == 2) {\n      try {\n        setLoading(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        const signer = provider.getSigner();\n        const nft_contract = new ethers.Contract(nftContractAddress, nftContract.abi, signer);\n\n        if (data.account === ownerAddress) {\n          const mint_tx = await nft_contract.mint(mintAmount);\n          await mint_tx.wait();\n        } else {\n          const totalMintCost = ethers.utils.parseEther(String(info.mintCost * mintAmount), \"WPWR\");\n          const mint_tx = await nft_contract.mint(mintAmount, {\n            value: totalMintCost\n          });\n          await mint_tx.wait();\n        }\n\n        setLoading(false);\n        getInfo();\n      } catch (error) {\n        setLoading(false);\n        window.alert(\"An error has occured, Please Try Again\");\n        console.log(error);\n      }\n    }\n  };\n\n  const stakeItem = async id => {\n    console.log([id]);\n\n    if (data.network === networksMap[networkDeployedTo]) {\n      console.log([id]);\n\n      try {\n        setLoading(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        const signer = provider.getSigner();\n        const nft_contract = new ethers.Contract(nftContractAddress, nftContract.abi, signer);\n        const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\n        const approve_tx = await nft_contract.approve(stakingContractAddress, id);\n        await approve_tx.wait();\n        console.log([id]);\n        const stake_tx = await staking_contract.stake([id]);\n        await stake_tx.wait();\n        setLoading(false);\n        getInfo();\n      } catch (error) {\n        setLoading(false);\n        window.alert(\"An error has occured, Please Try Again\");\n        console.log(error);\n      }\n    }\n  };\n\n  const unstakeItem = async id => {\n    if (data.network === networksMap[networkDeployedTo]) {\n      try {\n        setLoading(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        const signer = provider.getSigner();\n        const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\n        const unstake_tx = await staking_contract.unstake([id]);\n        await unstake_tx.wait();\n        setLoading(false);\n        getInfo();\n      } catch (error) {\n        setLoading(false);\n        window.alert(\"An error has occured, Please Try Again\");\n        console.log(error);\n      }\n    }\n  };\n\n  const unstakeAll = async () => {\n    if (data.network === networksMap[networkDeployedTo]) {\n      try {\n        setLoading(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        const signer = provider.getSigner();\n        const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\n        const unstake_tx = await staking_contract.unstake(info.stakedNftIds);\n        await unstake_tx.wait();\n        setLoading(false);\n        getInfo();\n      } catch (error) {\n        setLoading(false);\n        window.alert(\"An error has occured, Please Try Again\");\n        console.log(error);\n      }\n    }\n  };\n\n  const claim = async () => {\n    if (data.network === networksMap[networkDeployedTo]) {\n      try {\n        setLoading(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        const signer = provider.getSigner();\n        const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\n        const claim_tx = await staking_contract.claim(info.stakedNftIds);\n        await claim_tx.wait();\n        setLoading(false);\n        getInfo();\n      } catch (error) {\n        setLoading(false);\n        window.alert(\"An error has occured, Please Try Again\");\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getInfo();\n  }, [data.account]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"claim\",\n      id: \"claim\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roadmap-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center p-2\",\n            children: \"Minting Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            responsive: true,\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  children: \"Total Collection Supply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: info.maxSupply\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  children: \"Minted NFT Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: info.currentSupply\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  children: \"Mint Cost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [info.mintCost, \" WPWR\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  children: \"Max Mint Amount Per TX \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [info.maxMintAmountPerTx, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center p-2\",\n            children: \"Staking Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            responsive: true,\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  children: \"Your MaxDogeNFTs \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"[\", info.userNftIds.join(\" \"), \"]\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  children: \"Items Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: info.userNftIds.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  children: \"Items Staked\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"[\", info.stakedNftIds.join(\" \"), \"]\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  children: \"Earned Reward\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: info.totalReward !== 0 ? parseFloat(info.totalReward).toFixed(6) : 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info m-3\",\n              src: \"\",\n              onClick: claim,\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"inherit\",\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 44\n              }, this) : \"Claim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info m-3\",\n              src: \"\",\n              onClick: unstakeAll,\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"inherit\",\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 44\n              }, this) : \"Unstake All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roadmap-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mint-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            style: {\n              justifyContent: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-7\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"minttitle title\",\n                  children: \"Mint Your MaxDogeNFTs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image1,\n                  className: \"mint-img\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"lead\",\n                  style: {\n                    marginBottom: \"30px\"\n                  },\n                  children: \"A MaxDogeNFT is a character that is On Maxx Chain and Ready to gooooo! Maximum 5 per Transaction. Only 1200 WPWR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex justify-content-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"minus btn btn-info rounded-circle\",\n                      disabled: mintAmount === 1,\n                      onClick: () => {\n                        setMintAmount(mintAmount - 1);\n                      },\n                      children: \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"mintnum text-center\",\n                      readOnly: true,\n                      value: mintAmount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"plus btn btn-info rounded-circle\",\n                      disabled: mintAmount === info.maxMintAmountPerTx,\n                      onClick: () => {\n                        setMintAmount(mintAmount + 1);\n                      },\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info mt-3\",\n                      onClick: mint,\n                      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                        color: \"inherit\",\n                        size: 18\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 60\n                      }, this) : \"MINT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"my-items\",\n      children: userNfts.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"minttitle title text-center\",\n          children: \"My MaxDogeNFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items container\",\n          children: userNfts.map((nft, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: nft.uri,\n                className: \"item-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: info.stakedNftIds.includes(nft.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-info m-3\",\n                  role: \"button\",\n                  onClick: () => {\n                    unstakeItem(nft.id);\n                  },\n                  children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    color: \"inherit\",\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 64\n                  }, this) : \"UNSTAKE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-info m-3\",\n                  role: \"button\",\n                  onClick: () => {\n                    stakeItem(nft.id);\n                  },\n                  children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    color: \"inherit\",\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 64\n                  }, this) : \"STAKE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MintPage, \"0sE03yB3KLAQkTdlupY/H49pJl8=\", false, function () {\n  return [useSelector];\n});\n\n_c = MintPage;\nexport default MintPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MintPage\");","map":{"version":3,"names":["React","useState","useEffect","image1","NavBar","Footer","useSelector","ethers","axios","Table","CircularProgress","stakingContract","nftContract","stakingContractAddress","nftContractAddress","ownerAddress","networkDeployedTo","networksMap","MintPage","data","state","blockchain","value","mintAmount","setMintAmount","userNfts","setUserNfts","info","setInfo","currentSupply","maxSupply","maxMintAmountPerTx","mintCost","paused","userNftIds","stakedNftIds","totalReward","loading","setLoading","getInfo","network","provider","providers","Web3Provider","window","ethereum","nft_contract","Contract","abi","staking_contract","signer","getSigner","user","getAddress","stakedTokens","Array","from","tokensOfOwner","x","Number","reward","getTotalRewardEarned","userTokens","cost","baseURI","baseExtension","totalSupply","concat","sort","utils","formatUnits","_userNfts","Promise","all","map","nft","metadata","get","replace","toString","id","uri","image","mint","account","mint_tx","wait","totalMintCost","parseEther","String","error","alert","console","log","stakeItem","approve_tx","approve","stake_tx","stake","unstakeItem","unstake_tx","unstake","unstakeAll","claim","claim_tx","join","length","parseFloat","toFixed","textAlign","justifyContent","marginBottom","index","includes"],"sources":["C:/projects/MaxxDogeDapp/src/pages/MintPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"../assets/styles.css\";\r\nimport image1 from \"../assets/img/mint-punk.png\";\r\nimport NavBar from '../components/NavBar';\r\nimport Footer from '../components/Footer';\r\nimport { useSelector } from \"react-redux\";\r\nimport { ethers } from \"ethers\";\r\nimport axios from \"axios\"\r\nimport { Table } from \"react-bootstrap\";\r\nimport { CircularProgress } from \"@mui/material\"\r\n\r\nimport stakingContract from \"../artifacts/NFTStakingVault.sol/NFTStakingVault.json\";\r\nimport nftContract from \"../artifacts/KryptoPunks.sol/KryptoPunks.json\";\r\nimport { stakingContractAddress, nftContractAddress, ownerAddress, networkDeployedTo } from \"../utils/contracts-config\";\r\nimport networksMap from \"../utils/networksMap.json\";\r\n\r\nfunction MintPage() {\r\n    const data = useSelector((state) => state.blockchain.value)\r\n\r\n    const [mintAmount, setMintAmount] = useState(1)\r\n    const [userNfts, setUserNfts] = useState([])\r\n    const [info, setInfo] = useState({\r\n        currentSupply: 0,\r\n        maxSupply: 99,\r\n        maxMintAmountPerTx: 20,\r\n        mintCost: 550,\r\n        paused: 1,\r\n        userNftIds: [],\r\n        stakedNftIds: [],\r\n        totalReward: 0\r\n    })\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const getInfo = async () => {\r\n        if (data.network === networksMap[networkDeployedTo]) {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n            const nft_contract = new ethers.Contract(nftContractAddress, nftContract.abi, provider);\r\n            const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, provider);\r\n\r\n            const signer = provider.getSigner()\r\n            const user = await signer.getAddress()\r\n\r\n            const stakedTokens = Array.from((await staking_contract.tokensOfOwner(user)), x => Number(x))\r\n            const reward = await staking_contract.getTotalRewardEarned(user)\r\n\r\n            const paused = await nft_contract.paused()\r\n            var userTokens = Array.from((await nft_contract.tokensOfOwner(user)), x => Number(x))\r\n            const maxMintAmountPerTx = await nft_contract.maxMintAmountPerTx()\r\n            const cost = await nft_contract.cost()\r\n            const baseURI = await nft_contract.baseURI()\r\n            const baseExtension = await nft_contract.baseExtension()\r\n            const totalSupply = await nft_contract.totalSupply()\r\n            const maxSupply = await nft_contract.maxSupply()\r\n\r\n            userTokens = userTokens.concat(stakedTokens).sort()\r\n\r\n            setInfo({\r\n                currentSupply: Number(totalSupply),\r\n                maxSupply: Number(maxSupply),\r\n                maxMintAmountPerTx: Number(maxMintAmountPerTx),\r\n                mintCost: Number(ethers.utils.formatUnits(cost, \"WPWR\")),\r\n                paused: Number(paused),\r\n                userNftIds: userTokens,\r\n                stakedNftIds: stakedTokens,\r\n                totalReward: Number(ethers.utils.formatUnits(reward, \"WPWR\"))\r\n            })\r\n\r\n            const _userNfts = await Promise.all(userTokens.map(async (nft) => {\r\n                const metadata = await axios.get(\r\n                    baseURI.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\") + \"/\" + nft.toString() + baseExtension\r\n                )\r\n                return {\r\n                    id: nft,\r\n                    uri: metadata.data.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")\r\n                }\r\n            }))\r\n\r\n            setUserNfts(_userNfts)\r\n        }\r\n    }\r\n\r\n    const mint = async () => {\r\n        if (data.network === networksMap[networkDeployedTo] && info.paused == 2) {\r\n            try {\r\n                setLoading(true)\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n                const signer = provider.getSigner()\r\n                const nft_contract = new ethers.Contract(nftContractAddress, nftContract.abi, signer);\r\n                if (data.account === ownerAddress) {\r\n                    const mint_tx = await nft_contract.mint(mintAmount)\r\n                    await mint_tx.wait()\r\n                } else {\r\n                    const totalMintCost = ethers.utils.parseEther(String(info.mintCost * mintAmount), \"WPWR\")\r\n                    const mint_tx = await nft_contract.mint(mintAmount, { value: totalMintCost })\r\n                    await mint_tx.wait()\r\n                }\r\n                setLoading(false)\r\n                getInfo()\r\n            } catch (error) {\r\n                setLoading(false)\r\n                window.alert(\"An error has occured, Please Try Again\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const stakeItem = async (id) => {\r\n        console.log([id])\r\n        if (data.network === networksMap[networkDeployedTo]) {\r\n            console.log([id])\r\n            try {\r\n                setLoading(true)\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n                const signer = provider.getSigner()\r\n                const nft_contract = new ethers.Contract(nftContractAddress, nftContract.abi, signer);\r\n                const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\r\n\r\n                const approve_tx = await nft_contract.approve(stakingContractAddress, id)\r\n                await approve_tx.wait()\r\n\r\n                console.log([id])\r\n                const stake_tx = await staking_contract.stake([id])\r\n                await stake_tx.wait()\r\n\r\n                setLoading(false)\r\n                getInfo()\r\n            } catch (error) {\r\n                setLoading(false)\r\n                window.alert(\"An error has occured, Please Try Again\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const unstakeItem = async (id) => {\r\n        if (data.network === networksMap[networkDeployedTo]) {\r\n            try {\r\n                setLoading(true)\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n                const signer = provider.getSigner()\r\n                const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\r\n\r\n                const unstake_tx = await staking_contract.unstake([id])\r\n                await unstake_tx.wait()\r\n\r\n                setLoading(false)\r\n                getInfo()\r\n            } catch (error) {\r\n                setLoading(false)\r\n                window.alert(\"An error has occured, Please Try Again\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const unstakeAll = async () => {\r\n        if (data.network === networksMap[networkDeployedTo]) {\r\n            try {\r\n                setLoading(true)\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n                const signer = provider.getSigner()\r\n                const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\r\n\r\n                const unstake_tx = await staking_contract.unstake(info.stakedNftIds)\r\n                await unstake_tx.wait()\r\n\r\n                setLoading(false)\r\n                getInfo()\r\n            } catch (error) {\r\n                setLoading(false)\r\n                window.alert(\"An error has occured, Please Try Again\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const claim = async () => {\r\n        if (data.network === networksMap[networkDeployedTo]) {\r\n            try {\r\n                setLoading(true)\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n                const signer = provider.getSigner()\r\n                const staking_contract = new ethers.Contract(stakingContractAddress, stakingContract.abi, signer);\r\n\r\n                const claim_tx = await staking_contract.claim(info.stakedNftIds)\r\n                await claim_tx.wait()\r\n\r\n                setLoading(false)\r\n                getInfo()\r\n            } catch (error) {\r\n                setLoading(false)\r\n                window.alert(\"An error has occured, Please Try Again\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo()\r\n    }, [data.account])\r\n\r\n    return (\r\n        <section>\r\n            <NavBar />\r\n            <br />\r\n            <section className=\"claim\" id=\"claim\">\r\n                <div className=\"roadmap-container\"  >\r\n                    <div className='info-container'>\r\n                        <h3 className='text-center p-2'>Minting Info</h3>\r\n                        <Table responsive>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className='p-2'>Total Collection Supply</td>\r\n                                    <td>{info.maxSupply}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Minted NFT Count</td>\r\n                                    <td>{info.currentSupply}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Mint Cost</td>\r\n                                    <td>{info.mintCost} WPWR</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Max Mint Amount Per TX </td>\r\n                                    <td>{info.maxMintAmountPerTx} </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table >\r\n                    </div>\r\n                    <div className='info-container'>\r\n                        <h3 className='text-center p-2'>Staking Info</h3>\r\n                        <Table responsive>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className='p-2'>Your MaxDogeNFTs </td>\r\n                                    <td>[{info.userNftIds.join(\" \")}]</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Items Count</td>\r\n                                    <td>{info.userNftIds.length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Items Staked</td>\r\n                                    <td>[{info.stakedNftIds.join(\" \")}]</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-2'>Earned Reward</td>\r\n                                    <td>\r\n                                        {info.totalReward !== 0 ?\r\n                                            parseFloat(info.totalReward).toFixed(6) : 0\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table >\r\n                        <div style={{ textAlign: \"center\" }} >\r\n                            <button className=\"btn btn-info m-3\" src=\"\" onClick={claim}>\r\n                                {loading ? <CircularProgress color=\"inherit\" size={18} /> : \"Claim\"}\r\n                            </button>\r\n                            <button className=\"btn btn-info m-3\" src=\"\" onClick={unstakeAll}>\r\n                                {loading ? <CircularProgress color=\"inherit\" size={18} /> : \"Unstake All\"}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"roadmap-container\" >\r\n                    <div className='mint-container'>\r\n                        <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n                            <div className=\"col-md-7\">\r\n                                <div className=\"text-center\">\r\n                                    <h2 className=\"minttitle title\">\r\n                                        Mint Your MaxDogeNFTs\r\n                                    </h2>\r\n                                    <img src={image1} className=\"mint-img\" alt=\"\" />\r\n                                    <p className=\"lead\" style={{ marginBottom: \"30px\" }}>A MaxDogeNFT is a character that is On Maxx Chain and Ready to gooooo! Maximum 5 per Transaction. Only 1200 WPWR</p>\r\n                                    <div className=\"form-group\" >\r\n                                        <div className=\"d-flex justify-content-center\">\r\n                                            <button type=\"button\"\r\n                                                className=\"minus btn btn-info rounded-circle\"\r\n                                                disabled={mintAmount === 1}\r\n                                                onClick={() => { setMintAmount(mintAmount - 1) }}>-</button>\r\n                                            <input type=\"number\" className=\"mintnum text-center\" readOnly value={mintAmount} />\r\n                                            <button type=\"button\"\r\n                                                className=\"plus btn btn-info rounded-circle\"\r\n                                                disabled={mintAmount === info.maxMintAmountPerTx}\r\n                                                onClick={() => { setMintAmount(mintAmount + 1) }}>+</button>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button className=\"btn btn-info mt-3\" onClick={mint}>\r\n                                                {loading ? <CircularProgress color=\"inherit\" size={18} /> : \"MINT\"}\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className='my-items'>\r\n                {userNfts.length !== 0 ? (\r\n                    <>\r\n                        <h2 className=\"minttitle title text-center\">My MaxDogeNFTs</h2>\r\n                        <div className='items container'>\r\n                            {userNfts.map((nft, index) => {\r\n                                return (\r\n                                    <div className='item-box' key={index}>\r\n                                        <img src={nft.uri} className=\"item-img\" />\r\n                                        <div className='text-center'>\r\n                                            {info.stakedNftIds.includes(nft.id) ? (\r\n                                                <button className=\"btn btn-info m-3\" role=\"button\" onClick={() => { unstakeItem(nft.id) }}>\r\n                                                    {loading ? <CircularProgress color=\"inherit\" size={18} /> : \"UNSTAKE\"}\r\n                                                </button>\r\n                                            ) : (\r\n                                                <button className=\"btn btn-info m-3\" role=\"button\"\r\n                                                    onClick={() => { stakeItem(nft.id) }}>\r\n                                                    {loading ? <CircularProgress color=\"inherit\" size={18} /> : \"STAKE\"}\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </>\r\n                ) : null}\r\n            </section>\r\n            <Footer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MintPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}