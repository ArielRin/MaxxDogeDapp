{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\MaxxDogeDapp\\\\src\\\\components\\\\Connect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateAccountData, disconnect } from \"../features/blockchain\";\nimport { ethers, utils } from \"ethers\";\nimport { Modal } from \"react-bootstrap\";\nimport Web3Modal from \"web3modal\";\nimport networks from \"../utils/networksMap.json\";\nimport { ownerAddress } from \"../utils/contracts-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst eth = window.ethereum;\nlet web3Modal = new Web3Modal();\n\nfunction Connect() {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.blockchain.value);\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  async function fetchAccountData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const connection = await web3Modal.connect();\n      const provider = new ethers.providers.Web3Provider(connection);\n      setInjectedProvider(provider);\n      const signer = provider.getSigner();\n      const chainId = await provider.getNetwork();\n      const account = await signer.getAddress();\n      const balance = await signer.getBalance();\n      dispatch(updateAccountData({\n        account: account,\n        balance: utils.formatUnits(balance),\n        network: networks[String(chainId.chainId)]\n      }));\n      console.log({\n        account: account,\n        balance: utils.formatUnits(balance),\n        network: networks[String(chainId.chainId)]\n      });\n    } else {\n      console.log(\"Please install metamask\");\n      window.alert(\"Please Install Metamask\");\n    }\n  }\n\n  async function Disconnect() {\n    web3Modal.clearCachedProvider();\n\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n      setInjectedProvider(null);\n    }\n\n    dispatch(disconnect());\n    setShow(false);\n  }\n\n  useEffect(() => {\n    if (eth) {\n      eth.on('chainChanged', chainId => {\n        fetchAccountData();\n      });\n      eth.on('accountsChanged', accounts => {\n        fetchAccountData();\n      });\n    }\n  }, []);\n  const isConnected = data.account !== \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary m-2 rounded\",\n        onClick: handleShow,\n        children: data.account && `${data.account.slice(0, 6)}...${data.account.slice(data.account.length - 6, data.account.length)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Account: \", data.account]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Balance: \", data.balance && parseFloat(data.balance).toFixed(4), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Network: \", data.network]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [data.account === ownerAddress ? /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn btn-secondary mt-3\",\n            href: \"/owner-dashboard\",\n            role: \"button\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger mt-3\",\n            onClick: Disconnect,\n            children: \"Disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary m-2 rounded\",\n      onClick: fetchAccountData,\n      src: \"\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Connect, \"97QdkTmMaYNc9rSIcv+7+rPj6w8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Connect;\nexport default Connect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","updateAccountData","disconnect","ethers","utils","Modal","Web3Modal","networks","ownerAddress","eth","window","ethereum","web3Modal","Connect","dispatch","data","state","blockchain","value","injectedProvider","setInjectedProvider","show","setShow","handleClose","handleShow","fetchAccountData","connection","connect","provider","providers","Web3Provider","signer","getSigner","chainId","getNetwork","account","getAddress","balance","getBalance","formatUnits","network","String","console","log","alert","Disconnect","clearCachedProvider","on","accounts","isConnected","slice","length","parseFloat","toFixed"],"sources":["C:/projects/MaxxDogeDapp/src/components/Connect.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { updateAccountData, disconnect } from \"../features/blockchain\"\r\nimport { ethers, utils } from \"ethers\"\r\nimport { Modal } from \"react-bootstrap\"\r\nimport Web3Modal from \"web3modal\"\r\n\r\nimport networks from \"../utils/networksMap.json\"\r\nimport { ownerAddress } from \"../utils/contracts-config\"\r\n\r\n\r\nconst eth = window.ethereum\r\nlet web3Modal = new Web3Modal()\r\n\r\nfunction Connect() {\r\n    const dispatch = useDispatch()\r\n    const data = useSelector((state) => state.blockchain.value)\r\n\r\n    const [injectedProvider, setInjectedProvider] = useState();\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    async function fetchAccountData() {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            const connection = await web3Modal.connect()\r\n            const provider = new ethers.providers.Web3Provider(connection)\r\n\r\n            setInjectedProvider(provider);\r\n\r\n            const signer = provider.getSigner()\r\n            const chainId = await provider.getNetwork()\r\n            const account = await signer.getAddress()\r\n            const balance = await signer.getBalance()\r\n\r\n            dispatch(updateAccountData(\r\n                {\r\n                    account: account,\r\n                    balance: utils.formatUnits(balance),\r\n                    network: networks[String(chainId.chainId)]\r\n                }\r\n            ))\r\n            console.log({\r\n                account: account,\r\n                balance: utils.formatUnits(balance),\r\n                network: networks[String(chainId.chainId)]\r\n            })\r\n        }\r\n        else {\r\n            console.log(\"Please install metamask\")\r\n            window.alert(\"Please Install Metamask\")\r\n        }\r\n    }\r\n\r\n    async function Disconnect() {\r\n        web3Modal.clearCachedProvider();\r\n        if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\r\n            await injectedProvider.provider.disconnect();\r\n            setInjectedProvider(null)\r\n        }\r\n        dispatch(disconnect())\r\n        setShow(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (eth) {\r\n            eth.on('chainChanged', (chainId) => {\r\n                fetchAccountData()\r\n            })\r\n            eth.on('accountsChanged', (accounts) => {\r\n                fetchAccountData()\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const isConnected = data.account !== \"\"\r\n\r\n    return (\r\n\r\n        <>\r\n            {isConnected ? (\r\n                <>\r\n                    <button className=\"btn btn-secondary m-2 rounded\"\r\n                        onClick={handleShow}\r\n                    >\r\n                        {data.account &&\r\n                            `${data.account.slice(0, 6)}...${data.account.slice(\r\n                                data.account.length - 6,\r\n                                data.account.length\r\n                            )}`}\r\n                    </button>\r\n                    <Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>User</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p>Account: {data.account}</p>\r\n                            <p>Balance: {data.balance && parseFloat(data.balance).toFixed(4)} ETH</p>\r\n                            <p>Network: {data.network}</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            {data.account === ownerAddress ? (\r\n                                <a className='btn btn-secondary mt-3'\r\n                                    href={\"/owner-dashboard\"}\r\n                                    role=\"button\">\r\n                                    Dashboard\r\n                                </a>\r\n                            ) : null}\r\n                            <button\r\n                                className=\"btn btn-danger mt-3\"\r\n                                onClick={Disconnect}>\r\n                                Disconnect\r\n                            </button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </>\r\n            ) : (\r\n                <button className=\"btn btn-secondary m-2 rounded\" onClick={fetchAccountData} src=\"\">\r\n                    Connect Wallet\r\n                </button>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Connect;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}